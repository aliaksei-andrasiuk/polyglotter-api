openapi: 3.0.1

info:
  title: Polyglotter API
  version: 1.0.0

servers:
  - url: /
    description: localhost

paths:
  /translate:
    post:
      security:
        - ApiKeyAuth: []
      summary: translates text and responds with translated parts
      tags:
        - Translate
      operationId: processAndTranslate
      requestBody:
        $ref: '#/components/requestBodies/translateBody'
      responses:
        200:
          $ref: '#/components/responses/translateResponse'
        400:
          $ref: '#/components/responses/error'
        409:
          $ref: '#/components/responses/error'
        500:
          $ref: '#/components/responses/error'
  /dataset:
    get:
      security:
        - ApiKeyAuth: []
      summary: gets full dataset
      tags:
        - Dataset
      operationId: getDataset
      responses:
        200:
          $ref: '#/components/responses/translateResponse'
        400:
          $ref: '#/components/responses/error'
        409:
          $ref: '#/components/responses/error'
        500:
          $ref: '#/components/responses/error'

components:
  schemas:
    uuid:
      type: string
      format: uuid

    translatedItem:
      type: object
      properties:
        originalLine:
          type: string
          maxLength: 256
        translatedLine:
          type: string
          maxLength: 256
      additionalProperties: false

    datasetItem:
      type: object
      properties:
        phraseId::
          type: string
        wordId:
          type: string
        sourceRoot:
          type: string
        sourcePrefix:
          type: string
        sourceWord:
          type: string
        targetPhrase:
          type: string
        wordsCount:
          type: integer
          format: int32
      additionalProperties: false

  requestBodies:
    translateBody:
      description: Process text and translate it
      content:
        application/json:
          schema:
            type: object
            properties:
              text:
                type: string
                maxLength: 500000
            additionalProperties: false

  responses:
    datasetResponse:
      description: GET Dataset
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                format: int32
              data:
                type: array
                items:
                  $ref: '#/components/schemas/datasetItem'
            required:
              - status
              - data
            additionalProperties: false
    translateResponse:
      description: Generic successful response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                format: int32
              data:
                type: array
                items:
                  $ref: '#/components/schemas/translatedItem'
            required:
              - status
              - data
            additionalProperties: false
    genericResponse:
      description: Generic successful response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                format: int32
              message:
                type: string
                maxLength: 1024
            required:
              - status
              - message
            additionalProperties: false
    error:
      description: Generic error response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                format: int32
              message:
                type: string
                maxLength: 1024
              data:
                type: object
            required:
              - status
              - message
            additionalProperties: false
